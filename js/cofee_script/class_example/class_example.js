// Generated by CoffeeScript 1.10.0
(function() {
  var Account, Animal, Cat, Person, ac, animal, cat, tim, timy,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Animal = (function() {
    function Animal(name, age) {
      this.name = name;
      this.age = age;
    }

    Animal.prototype.voice = function() {
      return console.log('HI im' + this.name);
    };

    Animal.prototype.move = function(x) {
      console.log(x);
      return this.x = x;
    };

    Animal.prototype.alert_x = function() {
      console.log(this.x);
      return this.voice();
    };

    return Animal;

  })();

  animal = new Animal('Petya', 10);

  console.log(animal);

  animal.voice();

  animal.move(12);

  animal.alert_x();

  Cat = (function(superClass) {
    extend(Cat, superClass);

    function Cat() {
      return Cat.__super__.constructor.apply(this, arguments);
    }

    Cat.prototype.meyou = function() {
      return alert('my_name is' + this.name);
    };

    return Cat;

  })(Animal);

  cat = new Cat('Vasya', 100500);

  cat.meyou();

  cat.move(123);

  Person = (function() {
    function Person(options) {
      var ref;
      this.name = options.name, this.age = options.age, this.height = (ref = options.height) != null ? ref : 'average';
    }

    return Person;

  })();

  Person = (function() {
    function Person(options) {
      var ref;
      this.name = options.name, this.age = options.age, this.height = (ref = options.height) != null ? ref : '100300';
    }

    return Person;

  })();

  tim = new Person({
    name: 'Tim',
    age: 4
  });

  console.log(tim);

  timy = new Person({
    name: 'Timy',
    age: 4,
    height: 12
  });

  console.log(timy);

  Account = function(customer, cart) {
    this.customer = customer;
    this.cart = cart;
    return {
      voice: function() {
        console.log(123);
        return Account;
      }
    };
  };

  ac = Account(12, 32);

  console.log(ac);

  console.log(ac.voice());

}).call(this);

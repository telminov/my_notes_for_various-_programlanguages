def receiver():
	print(“Готов к приему значений”)
	while True:
		n = (yield)
		print(“Получено %s” % n)

r = receiver()
>>> r.next() # Выполнить до первой инструкции yield (r.__next__() в Python 3)
Готов к приему значений
>>> r.send(1)
Получено 1
****

но, эт не круто, лучше использовать декоратор делающий первый next()
def coroutine(func):
	def start(*args,**kwargs):
		g = func(*args,**kwargs)
		g.next()
		return g
	return start
При наличии этого декоратора его можно было бы применить к сопро-
граммам:
@coroutine
def receiver():
	print(“Готов к приему значений”)
	while True:
		n = (yield)
		print(“Получено %s” % n)
ёё
# Пример использования
r = receiver()
r.send(“Привет, Мир!”) # Внимание: начальный вызов .next() не требуется
Сопрограмма обычно может выполняться до бесконечности, пока она яв

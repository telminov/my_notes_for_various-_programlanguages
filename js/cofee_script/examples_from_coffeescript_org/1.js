// Generated by CoffeeScript 1.10.0
(function() {
  var a, age, ages, awardMedals, bitlist, changeNumbers, child, countdown, cube, date, dish, evens, fill, food, i, j, k, l, len, len1, len2, m, mood, num, other, ref, square, x, yearsOld,
    slice = [].slice;

  square = function(x) {
    return x * x;
  };

  cube = function(x) {
    return square(x) * x;
  };

  fill = function(container, liquid) {
    if (liquid == null) {
      liquid = "coffee";
    }
    return "Filing the " + container + " with " + liquid + " ";
  };

  bitlist = [1, 0, 1, 0, 0, 1, 1, 1, 0];

  a = {
    b: [10, 20, 30],
    vanya: "Ivan",
    fedya: {
      name: "Fedor",
      age: 8
    }
  };

  yearsOld = {
    max: 10,
    ida: 9,
    tim: 11
  };

  $('.account').attr({
    "class": 'active'
  });

  console.log(object["class"]);

  console.log(object["class"]);

  other = 1;

  changeNumbers = function() {
    var inner;
    inner = -1;
    return other = 10;
  };

  if (singing) {
    mood = greatlyImproved;
  }

  if (happy && knowsIt) {
    clapsHands();
    chaChaCha();
  } else {
    showIt();
  }

  date = friday ? sue : jill;

  awardMedals = function() {
    var first, gold, others, rest, second, silver;
    first = arguments[0], second = arguments[1], others = 3 <= arguments.length ? slice.call(arguments, 2) : [];
    gold = first;
    silver = second;
    return rest = others;
  };

  ref = ['toast', 'cheese', 'wine'];
  for (j = 0, len = ref.length; j < len; j++) {
    food = ref[j];
    eat(food);
  }

  for (i = k = 0, len1 = courses.length; k < len1; i = ++k) {
    dish = courses[i];
    menu(i + 1, dish);
  }

  for (l = 0, len2 = foods.length; l < len2; l++) {
    food = foods[l];
    if (food !== 'chocolate') {
      eat(food);
    }
  }

  countdown = (function() {
    var m, results;
    results = [];
    for (num = m = 10; m >= 1; num = --m) {
      results.push(num);
    }
    return results;
  })();

  for (num = m = 10; m >= 1; num = --m) {
    alert(num);
  }

  evens = (function() {
    var n, results;
    results = [];
    for (x = n = 0; n <= 10; x = n += 2) {
      results.push(x);
    }
    return results;
  })();

  yearsOld = {
    max: 10,
    ida: 9,
    tim: 11
  };

  ages = (function() {
    var results;
    results = [];
    for (child in yearsOld) {
      age = yearsOld[child];
      results.push(child + " is " + age);
    }
    return results;
  })();

}).call(this);
